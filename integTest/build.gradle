plugins {
    id 'java-library'
}

apply plugin: 'java'

repositories {
    jcenter()
}

dependencies {
	compile 'io.cucumber:cucumber-java:6.10.4'
    compile 'io.cucumber:cucumber-junit:6.10.4'
	compile group: 'info.cukes', name: 'cucumber-java', version: '1.2.5'
	compile group: 'io.cucumber', name: 'cucumber-junit', version: '6.10.2'
	compile 'junit:junit:4.12'
    
    compile 'org.assertj:assertj-core:3.8.0'
    
	compile 'org.mockito:mockito-all:1.10.19'
	compile project(':model')
	compile project(':handlers')
}

sourceSets {
	integTest {
		java.srcDir 'src/main/java'
		resources.srcDir 'src/main/resources'
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

configurations {
	integTestCompile.extendsFrom testCompile
	integTestRuntime.extendsFrom testRuntime
}

task integTest(type: Test, dependsOn: [':infrastructure:resolveDevelopmentTemplate']) {	
	classpath = sourceSets.integTest.runtimeClasspath
	testClassesDirs = sourceSets.integTest.output.classesDirs
	systemProperties['stackName'] = stackName
	systemProperties['region'] = region
	testLogging.showStandardStreams = true
    outputs.upToDateWhen { false }
}

def s3Resources = "${project.rootDir}/artifacts"

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
    version null
    archiveName 'handlers.zip'
}

task copyS3LambdaJavaResources(type: Copy, dependsOn: 'buildZip') {
	from { buildZip }
	into "${s3Resources}"
}